/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oop_project;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.Scanner;

/**
 *
 * @author ADMIN
 */
public class User_Type extends javax.swing.JFrame{
        private static String UserID, password;
        private String s;
    /**
     * Creates new form User_Type
     */
    public User_Type() {
        initComponents();
    }
    public static String getUserId(){
        return UserID;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Student = new javax.swing.JButton();
        Teacher = new javax.swing.JButton();
        Faculty = new javax.swing.JButton();
        Graduate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        F_UserID = new javax.swing.JTextPane();
        F_Password = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        Logout = new javax.swing.JButton();

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Please select your position to Login");

        Student.setText("I am a Student");
        Student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentActionPerformed(evt);
            }
        });

        Teacher.setText("I am a Teacher");
        Teacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TeacherActionPerformed(evt);
            }
        });

        Faculty.setText("I am a Faculty Member");
        Faculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FacultyActionPerformed(evt);
            }
        });

        Graduate.setText("I am a Graduate");
        Graduate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraduateActionPerformed(evt);
            }
        });

        jLabel2.setText("User ID:");

        jLabel3.setText("Password:");

        jScrollPane1.setViewportView(F_UserID);

        F_Password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F_PasswordActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Sitka Subheading", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Enter Your Credentials");

        Logout.setText("Logout");
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1)
                                    .addComponent(F_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(103, 103, 103))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Student, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Teacher, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Graduate, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(Faculty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(Logout))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(F_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Graduate)
                    .addComponent(Student))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Faculty)
                    .addComponent(Teacher, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Logout)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentActionPerformed
        // TODO add your handling code here:
        this.s = "Student";
        Issue i = new Issue(s);
        this.UserID = F_UserID.getText();
        this.password = F_Password.getText();
        try {
            // TODO add your handling code here:
            Scanner sc = new Scanner(new FileReader("Student.txt"));
            boolean found = false;
            while (sc.hasNext()) {
                String Details = sc.nextLine();
                String DemoUser = Details.substring(0,5);
                String DemoPass = Details.substring(6);
                
                if(this.UserID.equals(DemoUser) && this.password.equals(DemoPass)){
                     //System.out.println("Sucessful");
                     Student s = new Student();
                     s.show();
                     this.hide();
                     found = true;
                     break;
                }
            } 
            if (!found) System.out.println("User Name or Password is incorrect");
            sc.close();
        } catch (FileNotFoundException e) {
            System.out.println(e);
        }  
    }//GEN-LAST:event_StudentActionPerformed

    private void F_PasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F_PasswordActionPerformed
        // TODO add your handling code here:
        this.password=F_Password.getText();
    }//GEN-LAST:event_F_PasswordActionPerformed

    private void GraduateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraduateActionPerformed
        // TODO add your handling code here:
        this.s = "Graduate";
        Issue i = new Issue(s);
        this.UserID = F_UserID.getText();
        this.password = F_Password.getText();
        try {
            // TODO add your handling code here:
            Scanner sc = new Scanner(new FileReader("Graduate.txt"));
            boolean found = false;
            while (sc.hasNext()) {
                String Details = sc.nextLine();
                String DemoUser = Details.substring(0,5);
                String DemoPass = Details.substring(6);
                
                if(this.UserID.equals(DemoUser) && this.password.equals(DemoPass)){
                     //System.out.println("Sucessful");
                     Graduate L = new Graduate();
                     L.show();
                     this.hide();
                     found = true;
                     break;
                }
            } 
            if (!found) System.out.println("User Name or Password is incorrect");
            sc.close();
        } catch (FileNotFoundException e) {
            System.out.println(e);
        }                                       
    }//GEN-LAST:event_GraduateActionPerformed

    private void TeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TeacherActionPerformed
        // TODO add your handling code here:
        this.s = "Teacher";
        Issue i = new Issue(s);
        this.UserID = F_UserID.getText();
        this.password = F_Password.getText();
        try {
            // TODO add your handling code here:
            Scanner sc = new Scanner(new FileReader("Teacher.txt"));
            boolean found = false;
            while (sc.hasNext()) {
                String Details = sc.nextLine();
                String DemoUser = Details.substring(0,5);
                String DemoPass = Details.substring(6);
                
                if(this.UserID.equals(DemoUser) && this.password.equals(DemoPass)){
                     //System.out.println("Sucessful");
                     Teacher L = new Teacher();
                     L.show();
                     this.hide();
                     found = true;
                     break;
                }
            } 
            if (!found) System.out.println("User Name or Password is incorrect");
            sc.close();
        } catch (FileNotFoundException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_TeacherActionPerformed

    private void FacultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FacultyActionPerformed
        // TODO add your handling code here:
        this.s = "Faculty";
        Issue i = new Issue(s);
        this.UserID = F_UserID.getText();
        this.password = F_Password.getText();
        try {
            // TODO add your handling code here:
            Scanner sc = new Scanner(new FileReader("Faculty.txt"));
            boolean found = false;
            while (sc.hasNext()) {
                String Details = sc.nextLine();
                String DemoUser = Details.substring(0,5);
                String DemoPass = Details.substring(6);
                
                if(this.UserID.equals(DemoUser) && this.password.equals(DemoPass)){
                     //System.out.println("Sucessful");
                     Faculty L = new Faculty();
                     L.show();
                     this.hide();
                     found = true;
                     break;
                }
            } 
            if (!found) System.out.println("User Name or Password is incorrect");
            sc.close();
        } catch (FileNotFoundException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_FacultyActionPerformed

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        // TODO add your handling code here:
        Librarian r = new Librarian();
        this.hide();
        r.show();
    }//GEN-LAST:event_LogoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User_Type.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User_Type.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User_Type.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User_Type.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new User_Type().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField F_Password;
    private javax.swing.JTextPane F_UserID;
    private javax.swing.JButton Faculty;
    private javax.swing.JButton Graduate;
    private javax.swing.JButton Logout;
    private javax.swing.JButton Student;
    private javax.swing.JButton Teacher;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
/*
in this class the user will enter whether they are a teacher, student or a faculty
the students include old(graduated in last 18 months) and current.
both old and current students can issue a book(old have to return within 7 days before getting a penalty, current 15 days before getting penalty.)
  they both can study, buy the weekly/monthly times magazine,.
but the current student also have acess to monthly uni magazine which is free of cost and they can book a confrence room for only 45 minutes.
if they want for a longer duration, they will have to book it twice.
both current and old students have acess to limited books. few resource books are only available for teachers
teachers
teachers have acess to all books, but are not allowed to use library area for any work, will have to book a confrence room. they also have
acess to weekly/monthly times magazine but not school magazine. they dont have any panilty for book issues
faculty
faculty only have acess to magazines and confrence rooms. they are not allowed to issue any book
*/